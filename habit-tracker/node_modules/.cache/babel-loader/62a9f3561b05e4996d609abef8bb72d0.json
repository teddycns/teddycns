{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactProject\\\\react-basic\\\\habit-tracker\\\\src\\\\app.jsx\";\nimport React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      habits: [// 배열일 경우 key 값을 지정해줘야 함. 고유의 값으로! (index는 key 값이 될 수 없음)\n      {\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Running',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }],\n      habitCount: 0\n    };\n\n    this.handleIncrement = habit => {\n      //callback 함수\n      //console.log(`handleIncrement ${habit.name}`);\n      // state를 직접 수정 (이 방법 사용X)\n      // habit.count++;\n      // this.setState(this.state);\n      // react에서는 state를 직접 수정하면 안됌. 따라서 위 주석과 같이 코딩하지 않고 아래와 같이 새로운 배열을 만들어 수정\n      const habits = [...this.state.habits]; // ... : spread operator : 각각의 데이터를 복사\n\n      const index = habits.indexOf(habit);\n      habits[index].count++;\n      this.setState({\n        habits: habits\n      }); // key:value = habits(state에 정의된 habits 배열명) : habits (새로 정의한 배열명)\n      // =  this.setState({habits}); - key와 value의 이름이 같을 경우 하나로 생략 가능\n\n      let habitCount = 0;\n\n      for (let i = 0; i < habits.length; i++) {\n        if (habits[i].count > 0) {\n          habitCount++;\n        }\n      }\n\n      this.setState({\n        habitCount\n      });\n    };\n\n    this.handleDecrement = habit => {\n      //console.log(`handleDecrement ${habit.name}`);\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count - 1;\n      habits[index].count = count < 0 ? 0 : count;\n      this.setState({\n        habits: habits\n      });\n      let habitCount = 0;\n\n      for (let i = 0; i < habits.length; i++) {\n        if (habits[i].count > 0) {\n          habitCount++;\n        }\n      }\n\n      this.setState({\n        habitCount\n      });\n    };\n\n    this.handleDelete = habit => {\n      //console.log(`handleDelete ${habit.name}`);\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({\n        habits: habits\n      });\n      let habitCount = 0;\n\n      for (let i = 0; i < habits.length; i++) {\n        if (habits[i].count > 0) {\n          habitCount++;\n        }\n      }\n\n      this.setState({\n        habitCount\n      });\n    };\n\n    this.handleAdd = () => {\n      const habitsCount = this.state.habits.length;\n      const add = [{\n        id: habitsCount + 1,\n        name: \"la\",\n        count: 0\n      }];\n      const habits = [...this.state.habits, add];\n      this.setState({\n        habits\n      });\n    };\n\n    this.handleRest = () => {\n      const habits = [{\n        id: 1,\n        name: 'Reading',\n        count: 0\n      }, {\n        id: 2,\n        name: 'Running',\n        count: 0\n      }, {\n        id: 3,\n        name: 'Coding',\n        count: 0\n      }];\n      let habitCount = 0;\n      this.setState({\n        habits\n      });\n      this.setState({\n        habitCount\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        habitCount: this.state.habitCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"habit-add\",\n        placeholder: \"Habit\",\n        name: \"inputhabit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"habit-btn\",\n        onClick: this.handleAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.habits.map(habit => /*#__PURE__*/_jsxDEV(Habit, {\n          /* habit이라는 props에 habit(map의 item) 전달, 배열인 경우 prop key값 지정 */\n          habit: habit,\n          onIncrement: this.handleIncrement,\n          onDecrement: this.handleDecrement,\n          onDelete: this.handleDelete\n        }, habit.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"habit-btn\",\n        onClick: this.handleRest,\n        children: \"Reset All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Habits","App","state","habits","id","name","count","habitCount","handleIncrement","habit","index","indexOf","setState","i","length","handleDecrement","handleDelete","filter","item","handleAdd","habitsCount","add","handleRest","render","map"],"sources":["C:/reactProject/react-basic/habit-tracker/src/app.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\n\nclass App extends Component {\n  state = {\n    habits: [ // 배열일 경우 key 값을 지정해줘야 함. 고유의 값으로! (index는 key 값이 될 수 없음)\n        {id: 1, name: 'Reading', count: 0},\n        {id: 2, name: 'Running', count: 0},\n        {id: 3, name: 'Coding', count: 0},\n    ],\n    habitCount: 0,\n};\n\n    handleIncrement = (habit) => { //callback 함수\n      //console.log(`handleIncrement ${habit.name}`);\n\n      // state를 직접 수정 (이 방법 사용X)\n      // habit.count++;\n      // this.setState(this.state);\n      \n      // react에서는 state를 직접 수정하면 안됌. 따라서 위 주석과 같이 코딩하지 않고 아래와 같이 새로운 배열을 만들어 수정\n      const habits = [...this.state.habits]; // ... : spread operator : 각각의 데이터를 복사\n      const index = habits.indexOf(habit);\n      habits[index].count++;\n      this.setState({habits: habits}); // key:value = habits(state에 정의된 habits 배열명) : habits (새로 정의한 배열명)\n      // =  this.setState({habits}); - key와 value의 이름이 같을 경우 하나로 생략 가능\n\n      let habitCount = 0;\n      for (let i=0; i<habits.length; i++){\n          if(habits[i].count > 0){\n              habitCount++;\n          }\n      }\n      this.setState({habitCount});\n    };\n\n    handleDecrement = (habit) => {\n      //console.log(`handleDecrement ${habit.name}`);\n\n      const habits = [...this.state.habits];\n      const index = habits.indexOf(habit);\n      const count = habits[index].count -1;\n      habits[index].count = count < 0 ? 0 : count;\n      this.setState({habits:habits});\n\n      let habitCount = 0;\n      for (let i=0; i<habits.length; i++){\n          if(habits[i].count > 0){\n              habitCount++;\n          }\n      }\n      this.setState({habitCount});\n    };\n\n    handleDelete = (habit) => {\n      //console.log(`handleDelete ${habit.name}`);\n\n      const habits = this.state.habits.filter(item => item.id !== habit.id);\n      this.setState({habits:habits});\n\n      let habitCount = 0;\n      for (let i=0; i<habits.length; i++){\n          if(habits[i].count > 0){\n              habitCount++;\n          }\n      }\n      this.setState({habitCount});\n    };\n\n    handleAdd = () => {\n      const habitsCount = this.state.habits.length;\n      const add = [\n          {id: habitsCount + 1,\n          name: \"la\",\n          count: 0}\n      ];\n      const habits = [...this.state.habits,add];\n      this.setState({habits});\n    };\n\n    handleRest = () => {\n      const habits = [\n          {id: 1, name: 'Reading', count: 0},\n          {id: 2, name: 'Running', count: 0},\n          {id: 3, name: 'Coding', count: 0},\n      ];\n      let habitCount = 0;\n\n      this.setState({habits});\n      this.setState({habitCount});\n\n    };\n\n    render() {\n        return ( \n            <>\n                <Navbar habitCount={this.state.habitCount}/>\n                <input className=\"habit-add\" placeholder='Habit' name=\"inputhabit\"/>\n                <button className=\"habit-btn\" onClick={this.handleAdd}>Add</button>\n                <ul>\n                    {this.state.habits.map(habit => (\n                        <Habit\n                            key={habit.id} /* habit이라는 props에 habit(map의 item) 전달, 배열인 경우 prop key값 지정 */\n                            habit={habit}\n                            onIncrement={this.handleIncrement}\n                            onDecrement={this.handleDecrement}\n                            onDelete={this.handleDelete} />\n                    ))}\n                </ul>\n                <button className='habit-btn' onClick={this.handleRest}>Reset All</button>\n            </>\n        );\n    }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}