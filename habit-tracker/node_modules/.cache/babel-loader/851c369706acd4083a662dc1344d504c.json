{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactProject\\\\react-basic\\\\habit-tracker\\\\src\\\\components\\\\habitAddForm.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HabitAddForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.inputRef = /*#__PURE__*/React.createRef();\n\n    this.onSubmit = event => {\n      event.preventDefault(); // 브라우저 기본 기능 취소: onSubmit 사용 시 refresh 되거나 기본적으로 다른 페이지로 가는 것을 예상하고 있음. 따라서 이 코드를 사용해서 브라우저 기본기능(refresh, 다른 페이지로 이동 등)을 취소함.\n      //console.log(this.inputRef.current.value);\n\n      const name = this.inputRef.current.value;\n      name && this.props.onAdd(name); // name이 비어있지 않다면 onAdd에 name 전달\n    };\n\n    this.handleAdd = () => {\n      console.log(this.props.habits);\n      const habitsCount = this.props.habits.length;\n      const add = [{\n        id: habitsCount + 1,\n        name: \"la\",\n        count: 0\n      }];\n      const habits = [...this.props.habits, add];\n      this.setState({\n        habits\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-form\",\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.inputRef // component가 브라우저에 표기가 되면 inputRef와 연결됌 -> 이 요소에 접근해서 해당하는 데이터를 읽어올 수 있음\n        ,\n        type: \"text\",\n        className: \"add-input\",\n        placeholder: \"Habit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HabitAddForm;","map":{"version":3,"names":["React","Component","HabitAddForm","inputRef","createRef","onSubmit","event","preventDefault","name","current","value","props","onAdd","handleAdd","console","log","habits","habitsCount","length","add","id","count","setState","render"],"sources":["C:/reactProject/react-basic/habit-tracker/src/components/habitAddForm.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass HabitAddForm extends Component {\r\n\r\n    inputRef = React.createRef();\r\n\r\n    onSubmit = (event) => { \r\n        event.preventDefault(); // 브라우저 기본 기능 취소: onSubmit 사용 시 refresh 되거나 기본적으로 다른 페이지로 가는 것을 예상하고 있음. 따라서 이 코드를 사용해서 브라우저 기본기능(refresh, 다른 페이지로 이동 등)을 취소함.\r\n        //console.log(this.inputRef.current.value);\r\n        const name = this.inputRef.current.value;\r\n        name && this.props.onAdd(name); // name이 비어있지 않다면 onAdd에 name 전달\r\n    };\r\n\r\n    handleAdd = () => {\r\n        console.log(this.props.habits);\r\n        const habitsCount = this.props.habits.length;\r\n        const add = [\r\n            {\r\n                id: habitsCount + 1,\r\n                name: \"la\",\r\n                count: 0\r\n            }\r\n        ];\r\n        const habits = [...this.props.habits, add];\r\n        this.setState({ habits });\r\n    };\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <form className=\"add-form\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    ref={this.inputRef} // component가 브라우저에 표기가 되면 inputRef와 연결됌 -> 이 요소에 접근해서 해당하는 데이터를 읽어올 수 있음\r\n                    type=\"text\"\r\n                    className=\"add-input\"\r\n                    placeholder='Habit'\r\n                />\r\n                <button className=\"add-button\">Add</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HabitAddForm;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;EAAA;IAAA;IAAA,KAEjCE,QAFiC,gBAEtBH,KAAK,CAACI,SAAN,EAFsB;;IAAA,KAIjCC,QAJiC,GAIrBC,KAAD,IAAW;MAClBA,KAAK,CAACC,cAAN,GADkB,CACM;MACxB;;MACA,MAAMC,IAAI,GAAG,KAAKL,QAAL,CAAcM,OAAd,CAAsBC,KAAnC;MACAF,IAAI,IAAI,KAAKG,KAAL,CAAWC,KAAX,CAAiBJ,IAAjB,CAAR,CAJkB,CAIc;IACnC,CATgC;;IAAA,KAWjCK,SAXiC,GAWrB,MAAM;MACdC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,MAAvB;MACA,MAAMC,WAAW,GAAG,KAAKN,KAAL,CAAWK,MAAX,CAAkBE,MAAtC;MACA,MAAMC,GAAG,GAAG,CACR;QACIC,EAAE,EAAEH,WAAW,GAAG,CADtB;QAEIT,IAAI,EAAE,IAFV;QAGIa,KAAK,EAAE;MAHX,CADQ,CAAZ;MAOA,MAAML,MAAM,GAAG,CAAC,GAAG,KAAKL,KAAL,CAAWK,MAAf,EAAuBG,GAAvB,CAAf;MACA,KAAKG,QAAL,CAAc;QAAEN;MAAF,CAAd;IACH,CAvBgC;EAAA;;EAyBjCO,MAAM,GAAG;IAEL,oBACI;MAAM,SAAS,EAAC,UAAhB;MAA2B,QAAQ,EAAE,KAAKlB,QAA1C;MAAA,wBACI;QACI,GAAG,EAAE,KAAKF,QADd,CACwB;QADxB;QAEI,IAAI,EAAC,MAFT;QAGI,SAAS,EAAC,WAHd;QAII,WAAW,EAAC;MAJhB;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI;QAAQ,SAAS,EAAC,YAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AAtCgC;;AAyCrC,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}